name: CI-releases

on:
  workflow_run:
    workflows: ["CI-all-branches"]
    types:
      - completed
    branches:
      - release/*
      - main

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    env:
      # just the registry host—don’t include the image name here
      IMAGE_REGISTRY: localhost:5000
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.17.0
          registry: false

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: '3.11.1'

      - uses: heypigeonhq/setup-skaffold@v1.1.0
        with:
          version: 'latest'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Kind cluster
        run: kind create cluster --name ci-kind

      - name: Initialize Skaffold Helm repositories
        run: |
          # Let Skaffold initialize its Helm repository configuration
          skaffold config set --global collect-metrics false
          # This will trigger Skaffold to set up any required Helm repos
          skaffold diagnose || true

      - name: Build & deploy with Skaffold
        run: |
          # Add verbose logging to see what's happening
          skaffold run \
            --default-repo ${{ env.IMAGE_REGISTRY }} \
            --verbosity=debug

      - name: Debug deployment state
        if: failure()
        run: |
          echo "=== Pods ==="
          kubectl get pods -A
          echo "=== Services ==="
          kubectl get svc -A
          echo "=== Events ==="
          kubectl get events --sort-by='.lastTimestamp' -A

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/threatintelrelay-api \
            -n default --timeout=120s

      - name: Smoke test service
        run: |
          # forward the HTTP port and check /health
          kubectl port-forward svc/threatintelrelay-api 8080:80 -n default &
          sleep 10
          curl --fail http://localhost:8080/health

      - name: Delete Kind cluster
        if: always()
        run: kind delete cluster --name ci-kind
