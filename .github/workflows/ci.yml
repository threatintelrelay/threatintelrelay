name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  fastapi-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t threatintelrelay-api:ci ./src/api

      - name: Run FastAPI container
        run: |
          docker run -d --name fastapi-test -p 8000:8000 threatintelrelay-api:ci

      - name: Wait for FastAPI to be ready
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:8000/ > /dev/null; then
              echo "FastAPI is up!"
              break
            fi
            echo "Waiting for FastAPI..."
            sleep 2
          done

      - name: Install test dependencies
        run: |
          docker exec fastapi-test pip install --no-cache-dir -r test-requirements.txt

      - name: Run tests in Docker container
        run: |
          docker exec fastapi-test pytest tests

      - name: Stop and remove container
        if: always()
        run: |
          docker stop fastapi-test
          docker rm fastapi-test

  cluster-tests:
    needs: unit-tests
    runs-on: ubuntu-latest
    env:
      IMAGE_REPO: localhost:5000/threatintelrelay-api
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Kind (Kubernetes in Docker)
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.17.0

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: '1.27.0'

      - name: Set up Helm
        uses: azure/setup-helm@v1

      - name: Set up Skaffold
        uses: google-github-actions/setup-skaffold@v2
        with:
          version: '2.4.5'

      - name: Create Kind cluster
        run: |
          kind create cluster --name ci-kind

      - name: Build and deploy with Skaffold
        run: |
          skaffold run --default-repo ${{ env.IMAGE_REPO }}

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment threatintelrelay-api -n default --timeout=120s

      - name: Smoke test service
        run: |
          kubectl port-forward svc/threatintelrelay-api 8080:80 -n default &
          sleep 10
          curl --fail http://localhost:8080/health

      - name: Delete Kind cluster
        if: always()
        run: |
          kind delete cluster --name ci-kind
